<UserControl x:Class="ControlLibrary.CLConnectTest"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ControlLibrary"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"  FontSize="12" Background="AliceBlue" Margin="1">
    <UserControl.CommandBindings>
        <CommandBinding Command="{x:Static local:CLConnectTest.SendCommand}" Executed="Send_Execute" CanExecute="Send_CanExecute"/>
    </UserControl.CommandBindings>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/DictionaryConnectTest.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <local:CmbSelectionConverter x:Key="cmbSelectionCvt"/>
            <local:ListBoxWidthConverter x:Key="listBoxWidthCvt"/>
            <local:IsRcvSendToAlignmentConverter x:Key="rcvSendToAlignCvt"/>
            <local:IsRcvSendToColorConverter x:Key="rcvSendToColorCvt"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="4*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <Grid Grid.Column="0" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <GroupBox Grid.Row="0" Header="网络设置">
                <StackPanel Margin="1" Orientation="Vertical">
                    <TextBlock  Margin="{Binding Margin,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}">(1)协议类型</TextBlock>
                    <ComboBox x:Name="cmbProtocolType"  Margin="{Binding Margin,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}" >
                        <ComboBoxItem IsSelected="True">UDP</ComboBoxItem>
                        <ComboBoxItem>TCP Client</ComboBoxItem>
                        <ComboBoxItem>TCP Server</ComboBoxItem>
                        <ComboBoxItem>Ping</ComboBoxItem>
                        <ComboBox.Style>
                            <Style TargetType="{x:Type ComboBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource  Mode=FindAncestor,AncestorType=local:CLConnectTest}, Path=IsConnected}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                    <TextBlock  Margin="{Binding Path= Margin,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="(2)本地主机地址"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=SelectedItem,ElementName=cmbProtocolType,Converter={StaticResource cmbSelectionCvt}}" Value="Ping">
                                        <Setter Property="Text" Value="(2)目的IP地址"/>
                                    </DataTrigger>
                                    <DataTrigger  Binding="{Binding Path=SelectedItem,ElementName=cmbProtocolType,Converter={StaticResource cmbSelectionCvt}}" Value="TCP Client">
                                        <Setter Property="Text" Value="(2)远程主机地址"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <ComboBox Name="cmbIpAddress" IsEditable="True" Margin="{Binding Margin,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}">
                        <ComboBox.Style>
                            <Style TargetType="{x:Type ComboBox}">
                                <Style.Triggers>
                                    <DataTrigger  Binding="{Binding RelativeSource={RelativeSource  Mode=FindAncestor,AncestorType=local:CLConnectTest}, Path=IsConnected}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                    <TextBlock Margin="{Binding Margin,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="(3)本地主机端口"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=SelectedItem,ElementName=cmbProtocolType,Converter={StaticResource cmbSelectionCvt}}" Value="Ping">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=SelectedItem,ElementName=cmbProtocolType,Converter={StaticResource cmbSelectionCvt}}" Value="TCP Client">
                                        <Setter Property="Text" Value="(3)远程主机端口"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBox x:Name="hostPort" DataContext="{Binding RelativeSource={RelativeSource  Mode=FindAncestor,AncestorType=local:CLConnectTest}}" Height="30"  Margin="{Binding Margin,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}"  ToolTip="{Binding RelativeSource={RelativeSource self},
                  Path=(Validation.Errors)[0].ErrorContent}">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=SelectedItem,ElementName=cmbProtocolType,Converter={StaticResource cmbSelectionCvt}}" Value="Ping">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                    <DataTrigger  Binding="{Binding RelativeSource={RelativeSource  Mode=FindAncestor,AncestorType=local:CLConnectTest}, Path=IsConnected}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                        <TextBox.Text>
                            <Binding Path="Port" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:PortRangeRule PortOrCnt="Port" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <Button  HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="50" IsDefault="True"
                             Margin="{Binding Margin,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}" Click="Btn_openConnect">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border>
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                    <Image Width="{TemplateBinding Height}" Margin="5" Name="imageConnect">
                                                        <Image.Style>
                                                            <Style TargetType="{x:Type Image}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=IsConnected, RelativeSource={RelativeSource  Mode=FindAncestor,AncestorType=local:CLConnectTest}}" Value="True">
                                                                        <Setter Property="Source" Value="{DynamicResource closeConnect}"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=IsConnected, RelativeSource={RelativeSource  Mode=FindAncestor,AncestorType=local:CLConnectTest}}" Value="False">
                                                                        <Setter Property="Source" Value="{DynamicResource openConnect}"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                    <TextBlock x:Name="txtConnect"  Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource  Mode=FindAncestor,AncestorType=local:CLConnectTest}, Path=IsConnected}" Value="True">
                                                                        <Setter Property="Text" Value="关    闭"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger  Binding="{Binding RelativeSource={RelativeSource  Mode=FindAncestor,AncestorType=local:CLConnectTest}, Path=IsConnected}" Value="False">
                                                                        <Setter Property="Text" Value="打    开"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger  Binding="{Binding Path=SelectedItem,ElementName=cmbProtocolType,Converter={StaticResource cmbSelectionCvt}}" Value="Ping">
                                                                        <Setter Property="Text" Value="Ping"/>
                                                                        <Setter Property="FontSize" Value="20"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </StackPanel>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </GroupBox>
            <GroupBox Grid.Row="1" Header="接收设置">
                <StackPanel Margin="1">
                    <WrapPanel   Margin="{Binding Margin,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}">
                        <RadioButton GroupName="js" Content="ASCII" IsChecked="True" Margin="0,0,5,0" Name="rcvRadioASCII"/>
                        <RadioButton GroupName="js" Content="HEX" Name="rcvRadioHEX"/>
                    </WrapPanel>
                    <CheckBox IsChecked="True" Content="按日志模式显示"   Margin="{Binding Margin,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}"/>
                    <CheckBox IsChecked="True" Content="接收完自动换行"   Margin="{Binding Margin,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}"/>
                    <CheckBox  Content="接收转存至文件"   Margin="{Binding Margin,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}"/>
                    <CheckBox  Content="暂停接收区显示"   Margin="{Binding Margin,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}"/>
                </StackPanel>
            </GroupBox>
            <GroupBox Grid.Row="2" Header="发送设置">
                <StackPanel Margin="1">
                    <WrapPanel   Margin="{Binding Margin,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}">
                        <RadioButton GroupName="fs" Content="ASCII" IsChecked="True" Margin="0,0,5,0" Name="sendRadioASCII"/>
                        <RadioButton GroupName="fs" Content="HEX" Name="sendRadioHEX"/>
                    </WrapPanel>
                    <CheckBox IsChecked="True" Content="自动解释转义字符"   Margin="{Binding Margin,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}"/>
                    <CheckBox IsChecked="True" Content="AT指令自动回车"   Margin="{Binding Margin,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}"/>
                    <CheckBox  Content="自动发送校验位"   Margin="{Binding Margin,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}"/>
                    <CheckBox  Content="打开文件数据源"   Margin="{Binding Margin,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}"/>
                    <WrapPanel Margin="{Binding Margin,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}">
                        <CheckBox Content="循环周期"/>
                        <TextBox Name="txtPeriod" Width="25"/>
                        <TextBlock Text="ms"/>
                    </WrapPanel>
                </StackPanel>
            </GroupBox>
        </Grid>

        <Grid Grid.Column="1" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="4*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <GroupBox Header="数据日志" Grid.Row="0">
                <ListBox Name="listDisplayData" ScrollViewer.HorizontalScrollBarVisibility="Disabled" >
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="{Binding IPPort}" FontSize="12" Foreground="#6D6D6D" HorizontalAlignment="{Binding IsRS,Converter={StaticResource rcvSendToAlignCvt}}" />
                                <TextBox Grid.Row="1" Text="{Binding Buffer}" Foreground="{Binding IsRS,Converter={StaticResource rcvSendToColorCvt}}" TextWrapping="Wrap"  IsReadOnly="True" HorizontalContentAlignment="{Binding IsRS,Converter={StaticResource rcvSendToAlignCvt}}" Width="{Binding Path=ViewportWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ScrollViewer},Converter={StaticResource listBoxWidthCvt}}" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </GroupBox>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="250"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Content="清除" Grid.Column="3" Click="Btn_clcTxtSend">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                <Image Source="{StaticResource downArrow}" Width="30"/>
                                                <TextBlock x:Name="Txt" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                            </StackPanel>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="清除" Grid.Column="1" Click="Btn_clcTxtRcv">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                <Image Source="{StaticResource upArrow}"  Width="30"/>
                                                <TextBlock x:Name="Txt" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                            </StackPanel>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                <Grid Grid.Column="4"  VerticalAlignment="Bottom" Margin="15,0,5,0">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger  Binding="{Binding Path=SelectedItem,ElementName=cmbProtocolType,Converter={StaticResource cmbSelectionCvt}}" Value="UDP">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="远程主机：" FontSize="12"/>
                    <ComboBox Grid.Column="1" IsEditable="True" Name="cmbRemoteHost" FontSize="12" SelectedIndex="0"/>
                </Grid>
            </Grid>
            <GroupBox Header="数据发送" Grid.Row="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="60"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0" Name="txtSend"  TextWrapping="Wrap">https://www.sanygroup.com</TextBox>
                    <Button  Content="发送" Grid.Column="1" Command="{x:Static local:CLConnectTest.SendCommand}" CommandTarget="{Binding ElementName=txtSend}"></Button>
                </Grid>
            </GroupBox>
        </Grid>

        <StatusBar Grid.Row="1" Grid.ColumnSpan="2">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="70" />
                            <ColumnDefinition Width="70" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <TextBlock Text="就绪！" x:Name="tbStatus" />
            </StatusBarItem>
            <Separator Grid.Column="1" />
            <StatusBarItem Grid.Column="2" HorizontalContentAlignment="Center">
                <TextBlock Text="0/0" />
            </StatusBarItem>
            <Separator Grid.Column="3" />
            <StatusBarItem Grid.Column="4"  HorizontalContentAlignment="Center" >
                <TextBlock Text="RX:0"/>
            </StatusBarItem>
            <Separator Grid.Column="5" />
            <StatusBarItem  Grid.Column="6" HorizontalContentAlignment="Center" >
                <TextBlock Text="TX:0"/>
            </StatusBarItem>
            <Separator Grid.Column="7" />
            <StatusBarItem Grid.Column="8">
                <Button x:Name="clcCnt" Content="复位计数" HorizontalAlignment="Left" VerticalAlignment="Top" Width="60" Height="26" IsDefault="False" Template="{StaticResource NormalButtonTemplate}"/>
            </StatusBarItem>
            <StatusBarItem Grid.Column="9">
                <Button x:Name="otherAssist" Content="其他工具" Click="OtherAssist_Click" HorizontalAlignment="Left" VerticalAlignment="Top" Width="60" Height="26" IsDefault="False" Template="{StaticResource NormalButtonTemplate}"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</UserControl>
